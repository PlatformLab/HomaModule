# This script starts up the Homa module and configures it for the
# local system. If Homa was previously installed, it is uninstalled.
# Usage:
# start_xl170 [mod_file]

set -e
rps=1
limit_rss=0
for arg in $@; do
    if [ $arg = no_rps ]; then
        rps=0
    fi
    done

if [ $# -eq 1 ]; then
    homa=$1
else
    homa=~/homaModule/homa.ko
fi

sudo rmmod homa || true
sudo insmod $homa
sudo sysctl /net/homa/link_mbps=25000
sudo sysctl /net/homa/max_nic_queue_ns=2000
sudo sysctl /net/homa/rtt_bytes=60000
sudo sysctl /net/homa/grant_increment=10000
sudo sysctl /net/homa/num_priorities=8
# sudo sysctl /net/homa/pacer_fifo_fraction=0
# sudo sysctl /net/homa/grant_fifo_fraction=0
# sudo sysctl /net/homa/verbose=1
sudo cpupower frequency-set -g performance
sudo ethtool -C ens1f1 adaptive-rx off rx-usecs 5 rx-frames 1 || true
# sudo sysctl .net.core.netdev_budget=300
# sudo sysctl .net.ipv4.tcp_congestion_control=cubic

# Clean metrics for metrics.py
rm -f ~/.homa_metrics

# Turn on RPS and RFS
if [ $rps -eq 1 ]; then
    echo Turning on RPS/RFS
    sudo sysctl -w net.core.rps_sock_flow_entries=32768
    for f in /sys/class/net/ens1f1/queues/rx-*/rps_flow_cnt; do
        sudo bash -c "echo 2048 > $f"
        done
    for f in /sys/class/net/ens1f1/queues/rx-*/rps_cpus; do
        sudo bash -c "echo fffff > $f"
        done
    sudo ethtool -K ens1f1 ntuple on
else 
    echo Turning off RPS/RFS
    sudo sysctl -w net.core.rps_sock_flow_entries=0
    for f in /sys/class/net/ens1f1/queues/rx-*/rps_flow_cnt; do
        sudo bash -c "echo 0 > $f"
        done
    for f in /sys/class/net/ens1f1/queues/rx-*/rps_cpus; do
        sudo bash -c "echo 00000 > $f"
        done
    sudo ethtool -K ens1f1 ntuple off
fi

if false; then
# This code may be broken now, given new Linux version
echo "This code shouldn't run!!"
if [ $limit_rss -eq 1 ]; then
    echo Limiting RSS channels
    sudo bash -c "echo 16 > /proc/irq/117/smp_affinity_list"
    sudo bash -c "echo 18 > /proc/irq/118/smp_affinity_list"
    sudo ethtool -L ens1f1 combined 2
else
    echo Using all RSS channels
    # Note: the first line below corresponds to device
    # mlx5_comp0@pci:0000:03:00.1 in the printout from 'cat /proc/interrupts'??
    sudo bash -c "echo 0 > /proc/irq/106/smp_affinity_list"
    sudo bash -c "echo 1 > /proc/irq/107/smp_affinity_list"
    sudo bash -c "echo 2 > /proc/irq/108/smp_affinity_list"
    sudo bash -c "echo 3 > /proc/irq/109/smp_affinity_list"
    sudo bash -c "echo 4 > /proc/irq/110/smp_affinity_list"
    sudo bash -c "echo 5 > /proc/irq/111/smp_affinity_list"
    sudo bash -c "echo 6 > /proc/irq/112/smp_affinity_list"
    sudo bash -c "echo 7 > /proc/irq/113/smp_affinity_list"
    sudo bash -c "echo 8 > /proc/irq/114/smp_affinity_list"
    sudo bash -c "echo 9 > /proc/irq/115/smp_affinity_list"
    sudo bash -c "echo 10 > /proc/irq/116/smp_affinity_list"
    sudo bash -c "echo 11 > /proc/irq/117/smp_affinity_list"
    sudo bash -c "echo 12 > /proc/irq/118/smp_affinity_list"
    sudo bash -c "echo 13 > /proc/irq/119/smp_affinity_list"
    sudo bash -c "echo 14 > /proc/irq/120/smp_affinity_list"
    sudo bash -c "echo 15 > /proc/irq/121/smp_affinity_list"
    sudo bash -c "echo 16 > /proc/irq/122/smp_affinity_list"
    sudo bash -c "echo 17 > /proc/irq/123/smp_affinity_list"
    sudo bash -c "echo 18 > /proc/irq/124/smp_affinity_list"
    sudo bash -c "echo 19 > /proc/irq/125/smp_affinity_list"
    sudo ethtool -L ens1f1 combined 20
fi
fi